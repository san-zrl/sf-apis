// Code generated by github.com/actgardner/gogen-avro/v8. DO NOT EDIT.
/*
 * SOURCE:
 *     SysFlow.avsc
 */
package sfgo

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v9/compiler"
	"github.com/actgardner/gogen-avro/v9/vm"
	"github.com/actgardner/gogen-avro/v9/vm/types"
)

type UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum int

const (
	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumSFHeader UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum = 0

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumContainer UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum = 1

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumProcess UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum = 2

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumFile UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum = 3

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumProcessEvent UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum = 4

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumNetworkFlow UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum = 5

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumFileFlow UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum = 6

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumFileEvent UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum = 7

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumNetworkEvent UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum = 8

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumProcessFlow UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum = 9

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumPod UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum = 10

	UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumK8sEvent UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum = 11
)

type UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent struct {
	SFHeader     SFHeader
	Container    Container
	Process      Process
	File         File
	ProcessEvent ProcessEvent
	NetworkFlow  NetworkFlow
	FileFlow     FileFlow
	FileEvent    FileEvent
	NetworkEvent NetworkEvent
	ProcessFlow  ProcessFlow
	Pod          Pod
	K8sEvent     K8sEvent
	UnionType    UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum
}

func writeUnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent(r UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent, w io.Writer) error {

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumSFHeader:
		return writeSFHeader(r.SFHeader, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumContainer:
		return writeContainer(r.Container, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumProcess:
		return writeProcess(r.Process, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumFile:
		return writeFile(r.File, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumProcessEvent:
		return writeProcessEvent(r.ProcessEvent, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumNetworkFlow:
		return writeNetworkFlow(r.NetworkFlow, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumFileFlow:
		return writeFileFlow(r.FileFlow, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumFileEvent:
		return writeFileEvent(r.FileEvent, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumNetworkEvent:
		return writeNetworkEvent(r.NetworkEvent, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumProcessFlow:
		return writeProcessFlow(r.ProcessFlow, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumPod:
		return writePod(r.Pod, w)
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumK8sEvent:
		return writeK8sEvent(r.K8sEvent, w)
	}
	return fmt.Errorf("invalid value for UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent")
}

func NewUnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent() UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent {
	return UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent{}
}

func (r UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) Serialize(w io.Writer) error {
	return writeUnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent(r, w)
}

func DeserializeUnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent(r io.Reader) (UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent, error) {
	t := NewUnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventFromSchema(r io.Reader, schema string) (UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent, error) {
	t := NewUnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) Schema() string {
	return "[{\"fields\":[{\"default\":4,\"name\":\"version\",\"type\":\"long\"},{\"name\":\"exporter\",\"type\":\"string\"},{\"default\":\"NA\",\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"filename\",\"type\":\"string\"}],\"name\":\"SFHeader\",\"namespace\":\"sysflow.entity\",\"type\":\"record\"},{\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"image\",\"type\":\"string\"},{\"name\":\"imageid\",\"type\":\"string\"},{\"name\":\"type\",\"type\":{\"name\":\"ContainerType\",\"namespace\":\"sysflow.type\",\"symbols\":[\"CT_DOCKER\",\"CT_LXC\",\"CT_LIBVIRT_LXC\",\"CT_MESOS\",\"CT_RKT\",\"CT_CUSTOM\",\"CT_CRI\",\"CT_CONTAINERD\",\"CT_CRIO\",\"CT_BPM\"],\"type\":\"enum\"}},{\"name\":\"privileged\",\"type\":\"boolean\"},{\"name\":\"podId\",\"type\":[\"null\",\"string\"]}],\"name\":\"Container\",\"namespace\":\"sysflow.entity\",\"type\":\"record\"},{\"fields\":[{\"name\":\"state\",\"type\":{\"name\":\"SFObjectState\",\"namespace\":\"sysflow.type\",\"symbols\":[\"CREATED\",\"MODIFIED\",\"REUP\"],\"type\":\"enum\"}},{\"name\":\"oid\",\"type\":{\"fields\":[{\"name\":\"createTS\",\"type\":\"long\"},{\"name\":\"hpid\",\"type\":\"long\"}],\"name\":\"OID\",\"namespace\":\"sysflow.type\",\"type\":\"record\"}},{\"name\":\"poid\",\"type\":[\"null\",\"sysflow.type.OID\"]},{\"name\":\"ts\",\"type\":\"long\"},{\"name\":\"exe\",\"type\":\"string\"},{\"name\":\"exeArgs\",\"type\":\"string\"},{\"name\":\"uid\",\"type\":\"int\"},{\"name\":\"userName\",\"type\":\"string\"},{\"name\":\"gid\",\"type\":\"int\"},{\"name\":\"groupName\",\"type\":\"string\"},{\"name\":\"tty\",\"type\":\"boolean\"},{\"name\":\"containerId\",\"type\":[\"null\",\"string\"]},{\"default\":false,\"name\":\"entry\",\"type\":\"boolean\"}],\"name\":\"Process\",\"namespace\":\"sysflow.entity\",\"type\":\"record\"},{\"fields\":[{\"name\":\"state\",\"type\":\"sysflow.type.SFObjectState\"},{\"name\":\"oid\",\"type\":{\"name\":\"FOID\",\"namespace\":\"sysflow.type\",\"size\":20,\"type\":\"fixed\"}},{\"name\":\"ts\",\"type\":\"long\"},{\"name\":\"restype\",\"type\":\"int\"},{\"name\":\"path\",\"type\":\"string\"},{\"name\":\"containerId\",\"type\":[\"null\",\"string\"]}],\"name\":\"File\",\"namespace\":\"sysflow.entity\",\"type\":\"record\"},{\"fields\":[{\"name\":\"procOID\",\"type\":\"sysflow.type.OID\"},{\"name\":\"ts\",\"type\":\"long\"},{\"name\":\"tid\",\"type\":\"long\"},{\"name\":\"opFlags\",\"type\":\"int\"},{\"name\":\"args\",\"type\":{\"items\":\"string\",\"type\":\"array\"}},{\"name\":\"ret\",\"type\":\"int\"}],\"name\":\"ProcessEvent\",\"namespace\":\"sysflow.event\",\"type\":\"record\"},{\"fields\":[{\"name\":\"procOID\",\"type\":\"sysflow.type.OID\"},{\"name\":\"ts\",\"type\":\"long\"},{\"name\":\"tid\",\"type\":\"long\"},{\"name\":\"opFlags\",\"type\":\"int\"},{\"name\":\"endTs\",\"type\":\"long\"},{\"name\":\"sip\",\"type\":\"int\"},{\"name\":\"sport\",\"type\":\"int\"},{\"name\":\"dip\",\"type\":\"int\"},{\"name\":\"dport\",\"type\":\"int\"},{\"name\":\"proto\",\"type\":\"int\"},{\"name\":\"fd\",\"type\":\"int\"},{\"name\":\"numRRecvOps\",\"type\":\"long\"},{\"name\":\"numWSendOps\",\"type\":\"long\"},{\"name\":\"numRRecvBytes\",\"type\":\"long\"},{\"name\":\"numWSendBytes\",\"type\":\"long\"}],\"name\":\"NetworkFlow\",\"namespace\":\"sysflow.flow\",\"type\":\"record\"},{\"fields\":[{\"name\":\"procOID\",\"type\":\"sysflow.type.OID\"},{\"name\":\"ts\",\"type\":\"long\"},{\"name\":\"tid\",\"type\":\"long\"},{\"name\":\"opFlags\",\"type\":\"int\"},{\"name\":\"openFlags\",\"type\":\"int\"},{\"name\":\"endTs\",\"type\":\"long\"},{\"name\":\"fileOID\",\"type\":\"sysflow.type.FOID\"},{\"name\":\"fd\",\"type\":\"int\"},{\"name\":\"numRRecvOps\",\"type\":\"long\"},{\"name\":\"numWSendOps\",\"type\":\"long\"},{\"name\":\"numRRecvBytes\",\"type\":\"long\"},{\"name\":\"numWSendBytes\",\"type\":\"long\"}],\"name\":\"FileFlow\",\"namespace\":\"sysflow.flow\",\"type\":\"record\"},{\"fields\":[{\"name\":\"procOID\",\"type\":\"sysflow.type.OID\"},{\"name\":\"ts\",\"type\":\"long\"},{\"name\":\"tid\",\"type\":\"long\"},{\"name\":\"opFlags\",\"type\":\"int\"},{\"name\":\"fileOID\",\"type\":\"sysflow.type.FOID\"},{\"name\":\"ret\",\"type\":\"int\"},{\"name\":\"newFileOID\",\"type\":[\"null\",\"sysflow.type.FOID\"]}],\"name\":\"FileEvent\",\"namespace\":\"sysflow.event\",\"type\":\"record\"},{\"fields\":[{\"name\":\"procOID\",\"type\":\"sysflow.type.OID\"},{\"name\":\"ts\",\"type\":\"long\"},{\"name\":\"tid\",\"type\":\"long\"},{\"name\":\"opFlags\",\"type\":\"int\"},{\"name\":\"sip\",\"type\":\"int\"},{\"name\":\"sport\",\"type\":\"int\"},{\"name\":\"dip\",\"type\":\"int\"},{\"name\":\"dport\",\"type\":\"int\"},{\"name\":\"proto\",\"type\":\"int\"},{\"name\":\"ret\",\"type\":\"int\"}],\"name\":\"NetworkEvent\",\"namespace\":\"sysflow.event\",\"type\":\"record\"},{\"fields\":[{\"name\":\"procOID\",\"type\":\"sysflow.type.OID\"},{\"name\":\"ts\",\"type\":\"long\"},{\"name\":\"numThreadsCloned\",\"type\":\"long\"},{\"name\":\"opFlags\",\"type\":\"int\"},{\"name\":\"endTs\",\"type\":\"long\"},{\"name\":\"numThreadsExited\",\"type\":\"long\"},{\"name\":\"numCloneErrors\",\"type\":\"long\"}],\"name\":\"ProcessFlow\",\"namespace\":\"sysflow.flow\",\"type\":\"record\"},{\"fields\":[{\"name\":\"ts\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"nodeName\",\"type\":\"string\"},{\"name\":\"hostIP\",\"type\":\"string\"},{\"name\":\"internalIP\",\"type\":\"string\"},{\"name\":\"namespace\",\"type\":\"string\"},{\"name\":\"restartCount\",\"type\":\"long\"},{\"name\":\"labels\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"selectors\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"services\",\"type\":{\"items\":{\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"namespace\",\"type\":\"string\"},{\"name\":\"portList\",\"type\":{\"items\":{\"fields\":[{\"name\":\"port\",\"type\":\"int\"},{\"name\":\"targetPort\",\"type\":\"int\"},{\"name\":\"nodePort\",\"type\":\"int\"},{\"name\":\"proto\",\"type\":\"string\"}],\"name\":\"Port\",\"type\":\"record\"},\"type\":\"array\"}},{\"name\":\"clusterIP\",\"type\":\"string\"}],\"name\":\"Service\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"Pod\",\"namespace\":\"sysflow.entity\",\"type\":\"record\"},{\"fields\":[{\"name\":\"ts\",\"type\":\"long\"},{\"name\":\"message\",\"type\":\"string\"}],\"name\":\"K8sEvent\",\"namespace\":\"sysflow.event\",\"type\":\"record\"}]"
}

func (_ UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) SetBoolean(v bool) {
	panic("Unsupported operation")
}
func (_ UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) SetInt(v int32) {
	panic("Unsupported operation")
}
func (_ UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) SetFloat(v float32) {
	panic("Unsupported operation")
}
func (_ UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) SetDouble(v float64) {
	panic("Unsupported operation")
}
func (_ UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) SetBytes(v []byte) {
	panic("Unsupported operation")
}
func (_ UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) SetString(v string) {
	panic("Unsupported operation")
}

func (r *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) SetLong(v int64) {

	r.UnionType = (UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnum)(v)
}

func (r *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) Get(i int) types.Field {

	switch i {
	case 0:
		r.SFHeader = NewSFHeader()
		return &types.Record{Target: (&r.SFHeader)}
	case 1:
		r.Container = NewContainer()
		return &types.Record{Target: (&r.Container)}
	case 2:
		r.Process = NewProcess()
		return &types.Record{Target: (&r.Process)}
	case 3:
		r.File = NewFile()
		return &types.Record{Target: (&r.File)}
	case 4:
		r.ProcessEvent = NewProcessEvent()
		return &types.Record{Target: (&r.ProcessEvent)}
	case 5:
		r.NetworkFlow = NewNetworkFlow()
		return &types.Record{Target: (&r.NetworkFlow)}
	case 6:
		r.FileFlow = NewFileFlow()
		return &types.Record{Target: (&r.FileFlow)}
	case 7:
		r.FileEvent = NewFileEvent()
		return &types.Record{Target: (&r.FileEvent)}
	case 8:
		r.NetworkEvent = NewNetworkEvent()
		return &types.Record{Target: (&r.NetworkEvent)}
	case 9:
		r.ProcessFlow = NewProcessFlow()
		return &types.Record{Target: (&r.ProcessFlow)}
	case 10:
		r.Pod = NewPod()
		return &types.Record{Target: (&r.Pod)}
	case 11:
		r.K8sEvent = NewK8sEvent()
		return &types.Record{Target: (&r.K8sEvent)}
	}
	panic("Unknown field index")
}
func (_ UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) NullField(i int) {
	panic("Unsupported operation")
}
func (_ UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) SetDefault(i int) {
	panic("Unsupported operation")
}
func (_ UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) AppendArray() types.Field {
	panic("Unsupported operation")
}
func (_ UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) Finalize() {
}

func (r UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) MarshalJSON() ([]byte, error) {

	switch r.UnionType {
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumSFHeader:
		return json.Marshal(map[string]interface{}{"sysflow.entity.SFHeader": r.SFHeader})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumContainer:
		return json.Marshal(map[string]interface{}{"sysflow.entity.Container": r.Container})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumProcess:
		return json.Marshal(map[string]interface{}{"sysflow.entity.Process": r.Process})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumFile:
		return json.Marshal(map[string]interface{}{"sysflow.entity.File": r.File})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumProcessEvent:
		return json.Marshal(map[string]interface{}{"sysflow.event.ProcessEvent": r.ProcessEvent})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumNetworkFlow:
		return json.Marshal(map[string]interface{}{"sysflow.flow.NetworkFlow": r.NetworkFlow})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumFileFlow:
		return json.Marshal(map[string]interface{}{"sysflow.flow.FileFlow": r.FileFlow})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumFileEvent:
		return json.Marshal(map[string]interface{}{"sysflow.event.FileEvent": r.FileEvent})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumNetworkEvent:
		return json.Marshal(map[string]interface{}{"sysflow.event.NetworkEvent": r.NetworkEvent})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumProcessFlow:
		return json.Marshal(map[string]interface{}{"sysflow.flow.ProcessFlow": r.ProcessFlow})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumPod:
		return json.Marshal(map[string]interface{}{"sysflow.entity.Pod": r.Pod})
	case UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEventTypeEnumK8sEvent:
		return json.Marshal(map[string]interface{}{"sysflow.event.K8sEvent": r.K8sEvent})
	}
	return nil, fmt.Errorf("invalid value for UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent")
}

func (r *UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["sysflow.entity.SFHeader"]; ok {
		r.UnionType = 0
		return json.Unmarshal([]byte(value), &r.SFHeader)
	}
	if value, ok := fields["sysflow.entity.Container"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.Container)
	}
	if value, ok := fields["sysflow.entity.Process"]; ok {
		r.UnionType = 2
		return json.Unmarshal([]byte(value), &r.Process)
	}
	if value, ok := fields["sysflow.entity.File"]; ok {
		r.UnionType = 3
		return json.Unmarshal([]byte(value), &r.File)
	}
	if value, ok := fields["sysflow.event.ProcessEvent"]; ok {
		r.UnionType = 4
		return json.Unmarshal([]byte(value), &r.ProcessEvent)
	}
	if value, ok := fields["sysflow.flow.NetworkFlow"]; ok {
		r.UnionType = 5
		return json.Unmarshal([]byte(value), &r.NetworkFlow)
	}
	if value, ok := fields["sysflow.flow.FileFlow"]; ok {
		r.UnionType = 6
		return json.Unmarshal([]byte(value), &r.FileFlow)
	}
	if value, ok := fields["sysflow.event.FileEvent"]; ok {
		r.UnionType = 7
		return json.Unmarshal([]byte(value), &r.FileEvent)
	}
	if value, ok := fields["sysflow.event.NetworkEvent"]; ok {
		r.UnionType = 8
		return json.Unmarshal([]byte(value), &r.NetworkEvent)
	}
	if value, ok := fields["sysflow.flow.ProcessFlow"]; ok {
		r.UnionType = 9
		return json.Unmarshal([]byte(value), &r.ProcessFlow)
	}
	if value, ok := fields["sysflow.entity.Pod"]; ok {
		r.UnionType = 10
		return json.Unmarshal([]byte(value), &r.Pod)
	}
	if value, ok := fields["sysflow.event.K8sEvent"]; ok {
		r.UnionType = 11
		return json.Unmarshal([]byte(value), &r.K8sEvent)
	}
	return fmt.Errorf("invalid value for UnionSFHeaderContainerProcessFileProcessEventNetworkFlowFileFlowFileEventNetworkEventProcessFlowPodK8sEvent")
}
